# Manages dist/ directory - checks if it's up to date and automatically updates it for PRs
# Replaces both check-dist.yml and dependabot-rebuild.yml with unified logic
name: Dist Management
permissions: read-all

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  workflow_call:

jobs:
  manage-dist:
    name: Check and Update Dist
    runs-on: ubuntu-latest

    permissions:
      contents: write
      statuses: write
      pull-requests: write

    outputs:
      dist-updated: ${{ steps.update.outputs.updated }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install Dependencies
        id: install
        run: npm ci

      - name: Build dist/ Directory
        id: build
        run: npm run bundle

      - name: Compare Expected and Actual Directories
        id: diff
        run: |
          if [ "$(git diff --ignore-space-at-eol --text dist/ | wc -l)" -gt "0" ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "Detected uncommitted changes after build. See status below:"
            git diff --ignore-space-at-eol --text dist/
          else
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            echo "No changes detected in dist/ directory"
          fi

      - name: Generate GitHub App token
        id: app_token
        if:
          steps.diff.outputs.has_changes == 'true' && github.event_name ==
          'pull_request'
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Update dist for PRs
        id: update
        if:
          steps.diff.outputs.has_changes == 'true' && github.event_name ==
          'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git remote set-url origin https://x-access-token:${{ steps.app_token.outputs.token }}@github.com/${{ github.repository }}
          git add dist/
          git commit -m "chore: update dist files"
          git push
          echo "updated=true" >> "$GITHUB_OUTPUT"
          echo "âœ… Dist files updated and committed"

      - name: Auto-approve Dependabot PRs
        if:
          github.event_name == 'pull_request' && (github.actor ==
          'dependabot[bot]' || github.actor == 'app/dependabot')
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE'
            });

      - name: Fail if dist out of sync on main
        if:
          steps.diff.outputs.has_changes == 'true' && github.event_name ==
          'push'
        run: |
          echo "::error::Dist files are out of sync on main branch. Run 'npm run bundle' and commit the changes."
          exit 1

      # If index.js was different than expected, upload the expected version as
      # a workflow artifact.
      - uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        with:
          name: dist
          path: dist/
